(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Jexl=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){var Evaluator=_dereq_("./evaluator/Evaluator"),Lexer=_dereq_("./Lexer"),Parser=_dereq_("./parser/Parser"),defaultGrammar=_dereq_("./grammar").elements;function Jexl(){this._customGrammar=null;this._lexer=null;this._transforms={}}Jexl.prototype.addBinaryOp=function(operator,precedence,fn){this._addGrammarElement(operator,{type:"binaryOp",precedence:precedence,eval:fn})};Jexl.prototype.addUnaryOp=function(operator,fn){this._addGrammarElement(operator,{type:"unaryOp",weight:Infinity,eval:fn})};Jexl.prototype.addTransform=function(name,fn){this._transforms[name]=fn};Jexl.prototype.addTransforms=function(map){for(var key in map){if(map.hasOwnProperty(key))this._transforms[key]=map[key]}};Jexl.prototype.getTransform=function(name){return this._transforms[name]};Jexl.prototype.eval=function(expression,context,cb){if(typeof context==="function"){cb=context;context={}}else if(!context)context={};var valPromise=this._eval(expression,context);if(cb){var called=false;return valPromise.then(function(val){called=true;setTimeout(cb.bind(null,null,val),0)}).catch(function(err){if(!called)setTimeout(cb.bind(null,err),0)})}return valPromise};Jexl.prototype.removeOp=function(operator){var grammar=this._getCustomGrammar();if(grammar[operator]&&(grammar[operator].type=="binaryOp"||grammar[operator].type=="unaryOp")){delete grammar[operator];this._lexer=null}};Jexl.prototype._addGrammarElement=function(str,obj){var grammar=this._getCustomGrammar();grammar[str]=obj;this._lexer=null};Jexl.prototype._eval=function(exp,context){var self=this,grammar=this._getGrammar(),parser=new Parser(grammar),evaluator=new Evaluator(grammar,this._transforms,context);return Promise.resolve().then(function(){parser.addTokens(self._getLexer().tokenize(exp));return evaluator.eval(parser.complete())})};Jexl.prototype._getCustomGrammar=function(){if(!this._customGrammar){this._customGrammar={};for(var key in defaultGrammar){if(defaultGrammar.hasOwnProperty(key))this._customGrammar[key]=defaultGrammar[key]}}return this._customGrammar};Jexl.prototype._getGrammar=function(){return this._customGrammar||defaultGrammar};Jexl.prototype._getLexer=function(){if(!this._lexer)this._lexer=new Lexer(this._getGrammar());return this._lexer};module.exports=new Jexl;module.exports.Jexl=Jexl},{"./Lexer":2,"./evaluator/Evaluator":3,"./grammar":5,"./parser/Parser":6}],2:[function(_dereq_,module,exports){var numericRegex=/^-?(?:(?:[0-9]*\.[0-9]+)|[0-9]+)$/,identRegex=/^[a-zA-Z_\$][a-zA-Z0-9_\$]*$/,escEscRegex=/\\\\/,preOpRegexElems=["'(?:(?:\\\\')?[^'])*'",'"(?:(?:\\\\")?[^"])*"',"\\s+","\\btrue\\b","\\bfalse\\b"],postOpRegexElems=["\\b[a-zA-Z_\\$][a-zA-Z0-9_\\$]*\\b","(?:(?:[0-9]*\\.[0-9]+)|[0-9]+)"],minusNegatesAfter=["binaryOp","unaryOp","openParen","openBracket","question","colon"];function Lexer(grammar){this._grammar=grammar}Lexer.prototype.getElements=function(str){var regex=this._getSplitRegex();return str.split(regex).filter(function(elem){return elem})};Lexer.prototype.getTokens=function(elements){var tokens=[],negate=false;for(var i=0;i<elements.length;i++){if(this._isWhitespace(elements[i])){if(tokens.length)tokens[tokens.length-1].raw+=elements[i]}else if(elements[i]==="-"&&this._isNegative(tokens))negate=true;else{if(negate){elements[i]="-"+elements[i];negate=false}tokens.push(this._createToken(elements[i]))}}if(negate)tokens.push(this._createToken("-"));return tokens};Lexer.prototype.tokenize=function(str){var elements=this.getElements(str);return this.getTokens(elements)};Lexer.prototype._createToken=function(element){var token={type:"literal",value:element,raw:element};if(element[0]=='"'||element[0]=="'")token.value=this._unquote(element);else if(element.match(numericRegex))token.value=parseFloat(element);else if(element==="true"||element==="false")token.value=element==="true";else if(this._grammar[element])token.type=this._grammar[element].type;else if(element.match(identRegex))token.type="identifier";else throw new Error("Invalid expression token: "+element);return token};Lexer.prototype._escapeRegExp=function(str){str=str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");if(str.match(identRegex))str="\\b"+str+"\\b";return str};Lexer.prototype._getSplitRegex=function(){if(!this._splitRegex){var elemArray=Object.keys(this._grammar);elemArray=elemArray.sort(function(a,b){return b.length-a.length}).map(function(elem){return this._escapeRegExp(elem)},this);this._splitRegex=new RegExp("("+[preOpRegexElems.join("|"),elemArray.join("|"),postOpRegexElems.join("|")].join("|")+")")}return this._splitRegex};Lexer.prototype._isNegative=function(tokens){if(!tokens.length)return true;return minusNegatesAfter.some(function(type){return type===tokens[tokens.length-1].type})};Lexer.prototype._isWhitespace=function(str){for(var i=0;i<str.length;i++){if(str[i]!=" ")return false}return true};Lexer.prototype._unquote=function(str){var quote=str[0],escQuoteRegex=new RegExp("\\\\"+quote,"g");return str.substr(1,str.length-2).replace(escQuoteRegex,quote).replace(escEscRegex,"\\")};module.exports=Lexer},{}],3:[function(_dereq_,module,exports){var handlers=_dereq_("./handlers");var Evaluator=function(grammar,transforms,context,relativeContext){this._grammar=grammar;this._transforms=transforms||{};this._context=context||{};this._relContext=relativeContext||this._context};Evaluator.prototype.eval=function(ast){var self=this;return Promise.resolve().then(function(){return handlers[ast.type].call(self,ast)})};Evaluator.prototype.evalArray=function(arr){return Promise.all(arr.map(function(elem){return this.eval(elem)},this))};Evaluator.prototype.evalMap=function(map){var keys=Object.keys(map),result={};var asts=keys.map(function(key){return this.eval(map[key])},this);return Promise.all(asts).then(function(vals){vals.forEach(function(val,idx){result[keys[idx]]=val});return result})};Evaluator.prototype._filterRelative=function(subject,expr){var promises=[];if(!Array.isArray(subject))subject=[subject];subject.forEach(function(elem){var evalInst=new Evaluator(this._grammar,this._transforms,this._context,elem);promises.push(evalInst.eval(expr))},this);return Promise.all(promises).then(function(values){var results=[];values.forEach(function(value,idx){if(value)results.push(subject[idx])});return results})};Evaluator.prototype._filterStatic=function(subject,expr){return this.eval(expr).then(function(res){if(typeof res==="boolean")return res?subject:undefined;return subject[res]})};module.exports=Evaluator},{"./handlers":4}],4:[function(_dereq_,module,exports){exports.ArrayLiteral=function(ast){return this.evalArray(ast.value)};exports.BinaryExpression=function(ast){var self=this;return Promise.all([this.eval(ast.left),this.eval(ast.right)]).then(function(arr){return self._grammar[ast.operator].eval(arr[0],arr[1])})};exports.ConditionalExpression=function(ast){var self=this;return this.eval(ast.test).then(function(res){if(res){if(ast.consequent)return self.eval(ast.consequent);return res}return self.eval(ast.alternate)})};exports.FilterExpression=function(ast){var self=this;return this.eval(ast.subject).then(function(subject){if(ast.relative)return self._filterRelative(subject,ast.expr);return self._filterStatic(subject,ast.expr)})};exports.Identifier=function(ast){if(ast.from){return this.eval(ast.from).then(function(context){if(context===undefined)return undefined;if(Array.isArray(context))context=context[0];return context?context[ast.value]:undefined})}else{return ast.relative?this._relContext[ast.value]:this._context[ast.value]}};exports.Literal=function(ast){return ast.value};exports.ObjectLiteral=function(ast){return this.evalMap(ast.value)};exports.Transform=function(ast){var transform=this._transforms[ast.name];if(!transform)throw new Error("Transform '"+ast.name+"' is not defined.");return Promise.all([this.eval(ast.subject),this.evalArray(ast.args||[])]).then(function(arr){return transform.apply(null,[arr[0]].concat(arr[1]))})};exports.UnaryExpression=function(ast){var self=this;return this.eval(ast.right).then(function(right){return self._grammar[ast.operator].eval(right)})}},{}],5:[function(_dereq_,module,exports){exports.elements={".":{type:"dot"},"[":{type:"openBracket"},"]":{type:"closeBracket"},"|":{type:"pipe"},"{":{type:"openCurl"},"}":{type:"closeCurl"},":":{type:"colon"},",":{type:"comma"},"(":{type:"openParen"},")":{type:"closeParen"},"?":{type:"question"},"+":{type:"binaryOp",precedence:30,eval:function(left,right){return left+right}},"-":{type:"binaryOp",precedence:30,eval:function(left,right){return left-right}},"*":{type:"binaryOp",precedence:40,eval:function(left,right){return left*right}},"/":{type:"binaryOp",precedence:40,eval:function(left,right){return left/right}},"//":{type:"binaryOp",precedence:40,eval:function(left,right){return Math.floor(left/right)}},"%":{type:"binaryOp",precedence:50,eval:function(left,right){return left%right}},"^":{type:"binaryOp",precedence:50,eval:function(left,right){return Math.pow(left,right)}},"==":{type:"binaryOp",precedence:20,eval:function(left,right){return left==right}},"!=":{type:"binaryOp",precedence:20,eval:function(left,right){return left!=right}},">":{type:"binaryOp",precedence:20,eval:function(left,right){return left>right}},">=":{type:"binaryOp",precedence:20,eval:function(left,right){return left>=right}},"<":{type:"binaryOp",precedence:20,eval:function(left,right){return left<right}},"<=":{type:"binaryOp",precedence:20,eval:function(left,right){return left<=right}},"&&":{type:"binaryOp",precedence:10,eval:function(left,right){return left&&right}},"||":{type:"binaryOp",precedence:10,eval:function(left,right){return left||right}},"in":{type:"binaryOp",precedence:20,eval:function(left,right){if(typeof right==="string")return right.indexOf(left)!==-1;if(Array.isArray(right)){return right.some(function(elem){return elem==left})}return false}},"!":{type:"unaryOp",precedence:Infinity,eval:function(right){return!right}}}},{}],6:[function(_dereq_,module,exports){var handlers=_dereq_("./handlers"),states=_dereq_("./states").states;function Parser(grammar,prefix,stopMap){this._grammar=grammar;this._state="expectOperand";this._tree=null;this._exprStr=prefix||"";this._relative=false;this._stopMap=stopMap||{}}Parser.prototype.addToken=function(token){if(this._state=="complete")throw new Error("Cannot add a new token to a completed Parser");var state=states[this._state],startExpr=this._exprStr;this._exprStr+=token.raw;if(state.subHandler){if(!this._subParser)this._startSubExpression(startExpr);var stopState=this._subParser.addToken(token);if(stopState){this._endSubExpression();if(this._parentStop)return stopState;this._state=stopState}}else if(state.tokenTypes[token.type]){var typeOpts=state.tokenTypes[token.type],handleFunc=handlers[token.type];if(typeOpts.handler)handleFunc=typeOpts.handler;if(handleFunc)handleFunc.call(this,token);if(typeOpts.toState)this._state=typeOpts.toState}else if(this._stopMap[token.type])return this._stopMap[token.type];else{throw new Error("Token "+token.raw+" ("+token.type+") unexpected in expression: "+this._exprStr)}return false};Parser.prototype.addTokens=function(tokens){tokens.forEach(this.addToken,this)};Parser.prototype.complete=function(){if(this._cursor&&!states[this._state].completable)throw new Error("Unexpected end of expression: "+this._exprStr);if(this._subParser)this._endSubExpression();this._state="complete";return this._cursor?this._tree:null};Parser.prototype.isRelative=function(){return this._relative};Parser.prototype._endSubExpression=function(){states[this._state].subHandler.call(this,this._subParser.complete());this._subParser=null};Parser.prototype._placeAtCursor=function(node){if(!this._cursor)this._tree=node;else{this._cursor.right=node;this._setParent(node,this._cursor)}this._cursor=node};Parser.prototype._placeBeforeCursor=function(node){this._cursor=this._cursor._parent;this._placeAtCursor(node)};Parser.prototype._setParent=function(node,parent){Object.defineProperty(node,"_parent",{value:parent,writable:true})};Parser.prototype._startSubExpression=function(exprStr){var endStates=states[this._state].endStates;if(!endStates){this._parentStop=true;endStates=this._stopMap}this._subParser=new Parser(this._grammar,exprStr,endStates)};module.exports=Parser},{"./handlers":7,"./states":8}],7:[function(_dereq_,module,exports){exports.argVal=function(ast){this._cursor.args.push(ast)};exports.arrayStart=function(){this._placeAtCursor({type:"ArrayLiteral",value:[]})};exports.arrayVal=function(ast){if(ast)this._cursor.value.push(ast)};exports.binaryOp=function(token){var precedence=this._grammar[token.value].precedence||0,parent=this._cursor._parent;while(parent&&parent.operator&&this._grammar[parent.operator].precedence>=precedence){this._cursor=parent;parent=parent._parent}var node={type:"BinaryExpression",operator:token.value,left:this._cursor};this._setParent(this._cursor,node);this._cursor=parent;this._placeAtCursor(node)};exports.dot=function(){this._nextIdentEncapsulate=this._cursor&&(this._cursor.type!="BinaryExpression"||this._cursor.type=="BinaryExpression"&&this._cursor.right)&&this._cursor.type!="UnaryExpression";this._nextIdentRelative=!this._cursor||this._cursor&&!this._nextIdentEncapsulate;if(this._nextIdentRelative)this._relative=true};exports.filter=function(ast){this._placeBeforeCursor({type:"FilterExpression",expr:ast,relative:this._subParser.isRelative(),subject:this._cursor})};exports.identifier=function(token){var node={type:"Identifier",value:token.value};if(this._nextIdentEncapsulate){node.from=this._cursor;this._placeBeforeCursor(node)}else{if(this._nextIdentRelative)node.relative=true;this._placeAtCursor(node)}};exports.literal=function(token){this._placeAtCursor({type:"Literal",value:token.value})};exports.objKey=function(token){this._curObjKey=token.value};exports.objStart=function(){this._placeAtCursor({type:"ObjectLiteral",value:{}})};exports.objVal=function(ast){this._cursor.value[this._curObjKey]=ast};exports.subExpression=function(ast){this._placeAtCursor(ast)};exports.ternaryEnd=function(ast){this._cursor.alternate=ast};exports.ternaryMid=function(ast){this._cursor.consequent=ast};exports.ternaryStart=function(){this._tree={type:"ConditionalExpression",test:this._tree};this._cursor=this._tree};exports.transform=function(token){this._placeBeforeCursor({type:"Transform",name:token.value,args:[],subject:this._cursor})};exports.unaryOp=function(token){this._placeAtCursor({type:"UnaryExpression",operator:token.value})}},{}],8:[function(_dereq_,module,exports){var h=_dereq_("./handlers");exports.states={expectOperand:{tokenTypes:{literal:{toState:"expectBinOp"},identifier:{toState:"identifier"},unaryOp:{},openParen:{toState:"subExpression"},openCurl:{toState:"expectObjKey",handler:h.objStart},dot:{toState:"traverse"},openBracket:{toState:"arrayVal",handler:h.arrayStart}}},expectBinOp:{tokenTypes:{binaryOp:{toState:"expectOperand"},pipe:{toState:"expectTransform"},dot:{toState:"traverse"},question:{toState:"ternaryMid",handler:h.ternaryStart}},completable:true},expectTransform:{tokenTypes:{identifier:{toState:"postTransform",handler:h.transform}}},expectObjKey:{tokenTypes:{identifier:{toState:"expectKeyValSep",handler:h.objKey},closeCurl:{toState:"expectBinOp"}}},expectKeyValSep:{tokenTypes:{colon:{toState:"objVal"}}},postTransform:{tokenTypes:{openParen:{toState:"argVal"},binaryOp:{toState:"expectOperand"},dot:{toState:"traverse"},openBracket:{toState:"filter"},pipe:{toState:"expectTransform"}},completable:true},postTransformArgs:{tokenTypes:{binaryOp:{toState:"expectOperand"},dot:{toState:"traverse"},openBracket:{toState:"filter"},pipe:{toState:"expectTransform"}},completable:true},identifier:{tokenTypes:{binaryOp:{toState:"expectOperand"},dot:{toState:"traverse"},openBracket:{toState:"filter"},pipe:{toState:"expectTransform"},question:{toState:"ternaryMid",handler:h.ternaryStart}},completable:true},traverse:{tokenTypes:{identifier:{toState:"identifier"}}},filter:{subHandler:h.filter,endStates:{closeBracket:"identifier"}},subExpression:{subHandler:h.subExpression,endStates:{closeParen:"expectBinOp"}},argVal:{subHandler:h.argVal,endStates:{comma:"argVal",closeParen:"postTransformArgs"}},objVal:{subHandler:h.objVal,endStates:{comma:"expectObjKey",closeCurl:"expectBinOp"}},arrayVal:{subHandler:h.arrayVal,endStates:{comma:"arrayVal",closeBracket:"expectBinOp"}},ternaryMid:{subHandler:h.ternaryMid,endStates:{colon:"ternaryEnd"}},ternaryEnd:{subHandler:h.ternaryEnd,completable:true}}},{"./handlers":7}]},{},[1])(1)});
